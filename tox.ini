# tox (https://tox.readthedocs.io/) is a tool for running tests
# in multiple virtualenvs. This configuration file will run the
# test suite on all supported python versions. To use it, "pip install tox"
# and then run "tox" from this directory.

[tox]
envlist = test

[server]
postgres_version = postgres12
python_version = python39

postgres_user = {env:USER}
postgres_testdb = {env:USER}
postgres_password = UNUSED
postgres_host = localhost
postgres_port = 5432

[testenv:server]
skip_install = true
allowlist_externals = docker
commands =
    docker build \ 
        --tag pygp-server:{[server]postgres_version}-{[server]python_version} \
        --file server/{[server]postgres_version}-{[server]python_version}.Dockerfile \
        server
    docker run -d \
        --name pygp-server \
        --env POSTGRES_USER=[[server]postgres_user]
        --env POSTGRES_PASSWORD={[server]postgres_password} \
        --env POSTGRES_DB={[server]postgres_testdb} \
        --publish 5432:{[server]postgres_port} \
        pygp-server:{[server]postgres_version}-{[server]python_version}

[testenv:test]
deps = -r requirements-dev.txt
commands =
    pytest --exitfirst {posargs}
setenv =
    PGHOST={env:PGHOST:{[server]postgres_host}}
    PGPORT={env:PGPORT:{[server]postgres_port}}
    PGPASSWORD={env:PGPASSWORD:{[server]postgres_password}}
    PGUSER={env:PGUSER:{[server]postgres_user}}
    TESTDB={env:TESTDB:{[server]postgres_testdb}}

[testenv:test_py{39,310}]
basepython =
    test_py39: python3.9
    test_py310: python3.10
deps = {[testenv:test]deps}
commands = {[testenv:test]commands}
setenv= {[testenv:test]setenv}

[testenv:lint]
basepython = python3.9
deps = {[testenv:test]deps}
commands =
    black . --check --diff
    isort --profile black . -c --diff
    pyright

[testenv:doc]
basepython = python3.9
deps = -r requirements-doc.txt
passenv=
       TAG_REF
commands =
    sphinx-build -W --keep-going -b html -j 2 -c {toxinidir}/doc/ {toxinidir}/doc/source {toxinidir}/build/doc/{env:TAG_REF:}

[testenv:docstyle]
basepython = python3.9
deps = {[testenv:docs]deps}
skip_install = true
commands =
    pydocstyle {posargs:greenplumpython}

[pytest]
addopts = --doctest-modules
 
doctest_optionflags = NORMALIZE_WHITESPACE
# TODO: Enable all examples under greenplumpython
testpaths =
    tests
    greenplumpython

[pydocstyle]
# TODO: Enable docstyle check for all files
match = .*(group|dataframe|expr|config|functions|type|db|func|order|op)\.py

[pycodestyle]
max-line-length = 100
